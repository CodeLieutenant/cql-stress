#! /usr/bin/env python3


from util.cassandra_stress import CassandraStress, CqlStressCassandraStress, generate_random_keyspaces, CSCliRuntimeArguments
from util.scylla_docker import ScyllaDockerNode
from cassandra.cluster import Cluster


# This test populates two tables with cassandra-stress and cql-stress-cassandra-stress.
# Then it checks whether these two tables are equal.
def run(runtime_args: CSCliRuntimeArguments, node: ScyllaDockerNode,
        cs: CassandraStress, cql_stress: CqlStressCassandraStress):
    cluster = Cluster([node.ip], port=node.port)
    session = cluster.connect()

    table_name = "standard1"
    keyspaces = generate_random_keyspaces()
    ks_cassandra = keyspaces.ks_cassandra
    ks_cqlstress = keyspaces.ks_cqlstress

    print("\n=== Populating DB... ===\n")

    print(
        f"\n=== Inserting {runtime_args.workload_size} rows to {ks_cassandra}.{table_name} with cassandra-stress ===\n")
    cs.run(command="write", node_ip=node.ip,
           keyspace=ks_cassandra, runtime_args=runtime_args)

    print(
        f"\n=== Inserting {runtime_args.workload_size} rows to {ks_cqlstress}.{table_name} with cql-stress ===\n")
    cql_stress.run(command="write", node_ip=node.ip,
                   keyspace=ks_cqlstress, runtime_args=runtime_args)

    # Check whether two tables are equal.
    cs_rows = session.execute(f'select * from {ks_cassandra}.{table_name}')
    cqlstress_rows = session.execute(
        f'select * from {ks_cqlstress}.{table_name}')

    print("\n=== Comparing tables... ===\n")
    if cs_rows != cqlstress_rows:
        print("Compared tables are not equal!!!")
        print(
            f"Table generated by cassandra-stress: {ks_cassandra}.{table_name}")
        print(f"Table generated by cql-stress: {ks_cqlstress}.{table_name}")
        print("Examine them to see the differences.")
        raise AssertionError("Test failed. Tables are not equal.")

    print("\n=== Test successful ===\n")
